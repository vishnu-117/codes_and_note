https://www.algotree.org/algorithms/recursive/subsets_recursion/
https://leetcode.ca/all/problems.html
https://www.techinterviewhandbook.org/coding-interview-techniques/
https://devinterview.io/questions/data-structures-and-algorithms/dynamic-programming-interview-questions/
https://devinterview.io/blog/backtracking-algorithms-interview-questions/
https://avikdas.com/2020/02/25/a-tree-based-introduction-to-backtracking.html
https://www.prepbytes.com/blog/hashing/
https://www.prepbytes.com/blog/backtracking-interview-questions/phone-number/
https://www.prepbytes.com/blog/recursion-articles/
https://www.enjoyalgorithms.com/blog/recursion-explained-how-recursion-works-in-programming
https://www.interviewbit.com/courses/programming/
https://www.geeksforgeeks.org/introduction-to-backtracking-data-structure-and-algorithm-tutorials/
https://www.geeksforgeeks.org/recursion-algorithms/
https://www.geeksforgeeks.org/recursion-practice-problems-solutions/
https://www.geeksforgeeks.org/backtracking-algorithms/
https://www.geeksforgeeks.org/top-50-interview-problems-on-recursion-algorithm/
https://www.geeksforgeeks.org/introduction-to-dynamic-programming-data-structures-and-algorithm-tutorials/
https://www.geeksforgeeks.org/dynamic-programming/
https://www.geeksforgeeks.org/top-50-dynamic-programming-coding-problems-for-interviews/
https://www.programiz.com/dsa/backtracking-algorithm
https://www.enjoyalgorithms.com/blog/time-complexity-analysis-of-recursion-in-programming
https://www.sanfoundry.com/python-programming-examples-linked-lists/
https://allendowney.github.io/DSIRP/quiz02.html
https://www.codingninjas.com/studio/problems?practice_topic%5B%5D=Backtracking
https://visualgo.net/en/recursion


dsa video:
https://www.youtube.com/watch?v=Awkkz8UytZE&list=PLyqSpQzTE6M9DKhN7z2fOpKTJWu-639_P&index=39
https://www.youtube.com/watch?v=P4toxusBX9M&list=PLBF3763AF2E1C572F&index=20
https://www.youtube.com/watch?v=Qmt0QwzEmh0&list=PLDV1Zeh2NRsB6SWUrDFW2RmDotAfPbeHu
https://www.youtube.com/watch?v=DgXR2OWQnLc&list=PLDV1Zeh2NRsDGO4--qE8yH72HFL1Km93P
https://www.youtube.com/watch?v=6iCHf7OZn6c&list=PL6Zs6LgrJj3tDXv8a_elC6eT_4R5gfX4d&index=1
https://www.youtube.com/watch?v=XCyuHSJS7XE&list=PLIY8eNdw5tW_zX3OCzX7NJ8bL1p6pWfgG&index=1


system design:
https://www.enjoyalgorithms.com/system-design-courses/
https://www.enjoyalgorithms.com/oops-course/

ML:
https://www.enjoyalgorithms.com/machine-learning-courses/

gret site:
https://tutorialhorizon.com/algorithms/category/recursion/?page=2&


python:
https://www.cs.rpi.edu/~sibel/csci1100/fall2015/course_notes/lec14_sets.html#exercises


awesome resources:
https://memlayout.com/
https://www.recursionvisualizer.com/
https://recursion.vercel.app/
https://www.codesdope.com/course/data-structures-introduction/
https://www.codesdope.com/course/algorithms-dynamic-programming/
https://www.enjoyalgorithms.com/data-structures-and-algorithms-course/
https://github.com/ashishps1/awesome-leetcode-resources
https://github.com/ashishps1/awesome-system-design-resources
https://github.com/ashishps1/awesome-low-level-design?tab=readme-ov-file
https://algo.monster/liteproblems/3sum
https://hackernoon.com/14-patterns-to-ace-any-coding-interview-question-c5bb3357f6ed
https://leetcode.com/discuss/general-discussion/460599/blind-75-leetcode-questions
https://www.teamblind.com/post/New-Year-Gift---Curated-List-of-Top-75-LeetCode-Questions-to-Save-Your-Time-OaM1orEU
https://gist.github.com/stvhwrd/b2703040d4ec72a5ce2c43dd7467f77b
https://docs.google.com/spreadsheets/d/1A2PaQKcdwO_lwxz9bAnxXnIQayCouZP6d-ENrBz_NXc/edit#gid=0
https://visualgo.net/en/list?slide=1


recursion playlist:
https://www.youtube.com/watch?v=kHi1DUhp9kM&list=PL_z_8CaSLPWeT1ffjiImo0sYTcnLzo-wY


dp:
https://www.youtube.com/watch?v=FfXoiwwnxFw&list=PLgUwDviBIf0qUlt5H_kiKYaNSqJ81PMMY
https://www.youtube.com/watch?v=nqowUJzG-iM&list=PL_z_8CaSLPWekqhdCPmFohncHwz8TY2Go
https://www.youtube.com/watch?v=PGsgv6nXhLw&list=PLDzeHZWIZsTomOPnCiU3J95WufjE36wsb
